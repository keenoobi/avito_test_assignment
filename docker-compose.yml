version: '3.8'

services:
  avito-shop-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: avito-shop-service
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - internal
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: .
          target: /app

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    command: >
      postgres -c max_connections=500      
    volumes:
      - ./migrations/001_init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - internal
  k6:
    image: grafana/k6
    container_name: k6
    entrypoint: [ "sleep", "infinity" ] # Контейнер остается запущенным
    volumes:
      - ./scripts:/scripts # Примонтировать папку со скриптами
    depends_on:
      - avito-shop-service
    networks:
      - internal

networks:
  internal:
