version: '3.8'

services:
  avito-shop-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: avito-shop-service
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - internal

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      # - pg_data:/var/lib/postgresql/data
      - ./migrations/001_init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - internal

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
    volumes:
      - influx_data:/var/lib/influxdb
    ports:
      - "8086:8086"
    restart: always
    networks:
      - internal

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - influxdb
    networks:
      - internal
    volumes:
      - grafana_data:/var/lib/grafana
  # k6:
  #   image: grafana/k6
  #   container_name: k6
  #   command: run --out influxdb=http://influxdb:8086/k6 /scripts/load-test.js
  #   volumes:
  #     - ./scripts:/scripts
  #   depends_on:
  #     - avito-shop-service
  #   networks:
  #     - internal

networks:
  internal:


volumes:
  # pg_data:
  influx_data:
  grafana_data:
